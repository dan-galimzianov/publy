'use client';

import { Button } from '@/shared/ui';
import { useAiGenerationStore } from '@/shared/stores';
import { withAiStep, type AiStepComponentProps } from '../withAiStep';
import { VoiceWaveAnimation, SpeechTranscript } from '@/components';
import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';

function AiTopicPage({ onContinue, canContinue }: AiStepComponentProps) {
  const { topic, setTopic } = useAiGenerationStore();
  const { 
    listening, 
    browserSupportsSpeechRecognition, 
    resetTranscript, 
    transcript,
    interimTranscript 
  } = useSpeechRecognition();

  if (!browserSupportsSpeechRecognition) {
    return (
      <div className="p-6 pb-0.5 max-w-2xl mx-auto w-full flex-1 flex flex-col justify-center items-center">
        <div className="text-center">
          <div className="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4 mx-auto">
            <svg className="w-8 h-8 text-gray-400" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 2c1.1 0 2 .9 2 2v6c0 1.1-.9 2-2 2s-2-.9-2-2V4c0-1.1.9-2 2-2zm6 6c0 3.31-2.69 6-6 6s-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8h-2z"/>
              <path d="M12 16v4h-2v-2H8v-2h8v2h-2z"/>
              <path d="M18 8l-2-2M8 6L6 8"/>
            </svg>
          </div>
          <h3 className="text-lg font-medium text-gray-900 mb-2">–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</h3>
          <p className="text-sm text-gray-500">–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ</p>
        </div>
      </div>
    );
  }

  const onStopListening = () => {
    const finalText = transcript || interimTranscript;
    if (finalText) {
      setTopic(topic ? `${topic} ${finalText}` : finalText);
    }
    SpeechRecognition.stopListening();
    resetTranscript();
  };

  const onStartListening = () => {
    resetTranscript();
    SpeechRecognition.startListening({
      continuous: true,
    });
  };

  const onContinueRecording = () => {
    const finalText = transcript || interimTranscript;
    if (finalText) {
      setTopic(topic ? `${topic} ${finalText}` : finalText);
    }
    resetTranscript();
    SpeechRecognition.startListening({
      continuous: true,
    });
  };

  const onReplaceRecording = () => {
    setTopic('');
    resetTranscript();
    SpeechRecognition.startListening({
      continuous: true,
      language: 'ru-RU',
    });
  };

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–ø–∏—Å–∏
  if (listening) {
    return (
      <div className="p-6 pb-0.5 max-w-2xl mx-auto w-full flex-1 flex flex-col">
        {/* –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–ø–∏—Å–∏ */}
        <div className="flex-1 flex flex-col items-center justify-center mb-8">
          <VoiceWaveAnimation isRecording={listening} size={140} />
          <div className="mt-6 text-center">
            <h3 className="text-lg font-medium text-gray-900 mb-2">–°–ª—É—à–∞—é...</h3>
            <p className="text-sm text-gray-500">–ì–æ–≤–æ—Ä–∏—Ç–µ –æ —Ç–µ–º–µ –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞</p>
          </div>
        </div>

        {/* –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è */}
        <div className="mb-6">
          <SpeechTranscript
            transcript={transcript}
            interimTranscript={interimTranscript}
            isRecording={listening}
          />
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ */}
        <Button
          onClick={onStopListening}
          className="w-full bg-red-500 hover:bg-red-600 text-white"
          size="sm"
        >
          –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å
        </Button>
      </div>
    );
  }

  // –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–µ–∑ —Ç–µ–º—ã
  if (topic.length === 0) {
    return (
      <div className="p-6 pb-0.5 max-w-2xl mx-auto w-full flex-1 flex flex-col">
        {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å —Å –∏–∫–æ–Ω–∫–æ–π –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º */}
        <div className="flex-1 flex flex-col items-center justify-center mb-8">
          <div className="mb-6">
            <VoiceWaveAnimation isRecording={false} size={120} />
          </div>
          <div className="text-center mb-8">
            <h3 className="text-lg font-medium text-gray-900 mb-2">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Ç–µ–º–µ –ø–æ—Å—Ç–∞</h3>
            <p className="text-sm text-gray-500 max-w-sm">
              –û–ø–∏—à–∏—Ç–µ –≥–æ–ª–æ—Å–æ–º —Ç–µ–º—É, –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç. –ù–∞–ø—Ä–∏–º–µ—Ä: &ldquo;–ö–∞–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Ä–µ–º–µ–Ω–µ–º&rdquo;
            </p>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ */}
        <Button
          onClick={onStartListening}
          className="w-full bg-red-500 hover:bg-red-600 text-white"
          size="sm"
        >
          üé§ –ù–∞—á–∞—Ç—å –∑–∞–ø–∏—Å—å
        </Button>
      </div>
    );
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ —Å –≥–æ—Ç–æ–≤–æ–π —Ç–µ–º–æ–π
  return (
    <div className="p-6 pb-0.5 max-w-2xl mx-auto w-full flex-1 flex flex-col">
      {/* –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å —Ç–µ–º–æ–π */}
      <div className="mb-6 flex flex-col flex-1 h-px">
        <label className="text-sm font-medium text-gray-700 mb-2">–¢–µ–º–∞ –ø–æ—Å—Ç–∞</label>
        <textarea
          value={topic}
          onChange={(e) => setTopic(e.target.value)}
          className="flex-1 w-full min-h-[120px] p-4 border border-gray-200 rounded-lg focus:ring-2 focus:ring-gray-900 focus:border-transparent resize-none text-sm"
          placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–∞–∫ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤—Ä–µ–º–µ–Ω–µ–º –¥–ª—è –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª–µ–π. –í–∫–ª—é—á–∏—Ç—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã, –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏ –ª–∏—á–Ω—ã–π –æ–ø—ã—Ç..."
          autoFocus
        />
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
      <div className="space-y-3">
        <div className="grid grid-cols-2 gap-3">
          <Button
            onClick={onReplaceRecording}
            variant="outline"
            className="w-full"
            size="sm"
          >
            üé§ –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å
          </Button>
          <Button
            onClick={onContinueRecording}
            variant="outline"
            className="w-full"
            size="sm"
          >
            ‚ûï –î–æ–ø–æ–ª–Ω–∏—Ç—å
          </Button>
        </div>

        <Button
          onClick={onContinue}
          disabled={!canContinue}
          className="w-full"
          size="sm"
        >
          –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
        </Button>
      </div>
    </div>
  );
}

export default withAiStep(AiTopicPage, {
  step: 'topic',
  title: 'AI –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞'
});
